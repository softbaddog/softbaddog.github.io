(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{161:function(t,s,a){t.exports=a.p+"assets/img/osconfig-borad-sram-size.97b0da51.png"},684:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"移植中的常见问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移植中的常见问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 移植中的常见问题")]),t._v(" "),n("h2",{attrs:{id:"_1-代码编译都能通过，但是-os-就是运行不起来？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-代码编译都能通过，但是-os-就是运行不起来？","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 代码编译都能通过，但是 OS 就是运行不起来？")]),t._v(" "),n("p",[t._v("为避免 OS 申请内存异常，需要编辑 "),n("code",[t._v("target_config.h")]),t._v("，将内存设置为当前芯片 SRAM 大小。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(161),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"_2-使用-gcc-编译无法重定向-printf-到指定串口？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-gcc-编译无法重定向-printf-到指定串口？","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 使用 GCC 编译无法重定向 printf 到指定串口？")]),t._v(" "),n("p",[t._v("由于 Keil/IAR 内置 MicroLib，如果使用 GCC 编译器，重写 fputc 仍然无法打印到串口，必须添加 "),n("a",{attrs:{href:"/porting/syscalls.c"}},[t._v("syscalls.c")]),t._v(" 文件。 同时在 "),n("code",[t._v("usart.c")]),t._v(" 中添加如下代码，将 printf 重定向到指定串口（可根据实际情况进行调整）：")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("/* USER CODE BEGIN 0 */")]),t._v("\n"),n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" __GNUC__")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("/* With GCC, small printf (option LD Linker->Libraries->Small printf\n   set to 'Yes') calls __io_putchar() */")]),t._v("\n"),n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" PUTCHAR_PROTOTYPE int __io_putchar(int ch)")]),t._v("\n"),n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n"),n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)")]),t._v("\n"),n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" ")]),n("span",{attrs:{class:"token comment"}},[t._v("/* __GNUC__ */")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("/* USER CODE END 0 */")]),t._v("\n")])])]),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("/* USER CODE BEGIN 1 */")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("/**\n  * @brief  Retargets the C library printf function to the USART.\n  * @param  None\n  * @retval None\n  */")]),t._v("\nPUTCHAR_PROTOTYPE\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("/* Place your implementation of fputc here */")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("/* e.g. write a character to the USART1 and Loop until the end of transmission */")]),t._v("\n  "),n("span",{attrs:{class:"token function"}},[t._v("HAL_UART_Transmit")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("huart1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint8_t "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("ch"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0xFFFF")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ch"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("/* USER CODE END 1 */")]),t._v("\n")])])])])}],e=a(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);r.options.__file="faq.md";s.default=r.exports}}]);